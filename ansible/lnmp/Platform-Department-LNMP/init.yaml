---
- name: 初始化
  hosts: all
  user: root
  tags: Init
  gather_facts: true
  vars_files:
    - /etc/ansible/playbooks/var.yaml
  tasks:
    - name: 记录初始化开始时间
      shell: echo "init start `date`" > /tmp/time.txt
    - yum: name="autoconf,bzip2,bzip2-devel,cmake,curl,curl-devel,e2fsprogs,e2fsprogs-devel,freetype,freetype-devel,gcc,gcc-c++,git,glibc,glibc-devel,gmp,gmp-devel,krb5-devel,libcurl,libcurl-devel,libidn,libidn-devel,libjpeg,libjpeg-devel,libmcrypt,libmcrypt-devel,libpng,libpng-devel,libtool-ltdl-devel,libxml2,libxml2-devel,libxslt,libxslt-devel,lrzsz,mysql-devel,ncurses,ncurses-devel,ntp,openldap,openldap-clients,openldap-devel,openldap-servers,openssl,openssl-devel,perl-CPAN,readline,readline-devel,screen,svn,unixODBC,unixODBC-devel,unzip"

    - name: 检查DNS地址
      shell: host www.sina.com.cn ; echo $?
      register: result
      ignore_errors: True
    - name: DNS地址无问题
      shell: echo "DNS解析无问题"  >> /root/result.txt
      when: result.stdout_lines[-1] == '0'
    - name: DNS解析失效
      shell: echo "DNS解析失效"  >> /root/result.txt
      when: result.stdout_lines[-1] != '0'

    - name: 检查host是否ping通10.133.193.110
      shell: ping -f -c 1 10.133.193.110  ; echo $?
      register: ping_result
      ignore_errors: True
    - name: 变更center.fswy.com解析地址为内网IP
      shell: echo "10.133.193.110              center.fswy.com" >> /etc/hosts
      when: ping_result.stdout_lines[-1] == '0'
    - name: 变更center.fswy.com解析地址为内网IP
      shell: echo "182.254.155.64                center.fswy.com" >> /etc/hosts
      when: ping_result.stdout_lines[-1] != '0'

    - name: ping结果展示
      debug: msg={{ ping_result }}

    - name: 创建safe_rm目录
      file: path={{ Init_safe_rm_tar_xf_dir }} state=directory
    - name: 解压safe_rm至目标主机
      unarchive: src={{ Init_file }}/{{ Init_safe_rm_packName }} dest={{ Init_safe_rm_tar_xf_dir }}
    - name: 移动safe_rm文件
      shell:
        mv {{ Init_safe_rm_tar_xf_dir }}/safe-rm-{{ Init_safe_rm_version }}/safe-rm /usr/local/bin/rm && \
        echo "/" >> /etc/safe-rm.conf && \
        echo "/boot" >> /etc/safe-rm.conf

    - name: 创建Openssl解压目录
      file: path={{ Openssl_tar_xf_dir }} state=directory
    - name: 解压openssl文件至目标主机
      unarchive: src={{ Openssl_file }}/{{ Openssl_packName }} dest={{ Openssl_tar_xf_dir }}



    - name: 创建SSH目录
      file: path={{  Init_SSH }} state=directory
    - name: 复制authorized_keys至目标主机
      copy: src={{ Init_file }}/authorized_keys dest={{ Init_SSH }} force=yes
    - name: 变更SSH目录权限
      shell: chmod -R 700 /root/.ssh/

    - name: 停止selinux
      shell: setenforce 0
      ignore_errors: True
    #&& sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config && echo "start1 `date`" > /tmp/time.txt
    - name: 变更selinux配置文件为disabled
      shell: sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config

    - name: 停止firewall服务
      shell: systemctl stop firewalld.service && systemctl disable firewalld.service
    - yum: name="iptables-services"
    - name: 复制iptables文件至目标主机
      copy: src={{ Init_file | quote  }}/iptables dest={{ Init_iptables | quote }} force=yes
    - name: 开启iptables服务且开机自启
      shell: systemctl enable iptables && systemctl start iptables

    - name: 复制.bashrc文件至目标主机
      copy: src={{ Init_file | quote  }}/.bashrc dest={{ Init_bashrc | quote }} force=yes
    - name: change_hostname
      shell: sed -i '/HOSTNAME/d' /etc/sysconfig/network && \
        echo "{{ Init_Hostname | quote }}" > /etc/hostname && \
        hostname -F /etc/hostname && \
        echo "HOSTNAME={{ Init_Hostname | quote }}" >> /etc/sysconfig/network

    - name: 调整主机时间时区为上海
      shell: /bin/rm -f /etc/localtime  && \
        cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
    - name: 复制clock至目标主机
      copy: src={{ Init_file | quote  }}/clock dest={{ Init_clock | quote}} force=yes

    - name: 增加history时间显示
      shell: echo "# add history time" >> /etc/bashrc && \
        echo "export HISTTIMEFORMAT=\"%F %T \"" >> /etc/bashrc

    - name: 展示磁盘空间
      shell:
        echo "echo '=========================================================='" >> /root/.bash_profile && \
        echo "cat /etc/redhat-release" >> /root/.bash_profile && \
        echo "echo '=========================================================='"  >> /root/.bash_profile && \
        echo "df -lh" >> /root/.bash_profile && \
        echo "ulimit -SHn 65535" >> /root/.bash_profile && \
        echo "stty -ixon" >> /root/.bash_profile #去掉终端ctrl+s 界面死锁状态

    ### Openssl ###
    - name: config_openssl
      shell: ./config --prefix=/usr  \
        --openssldir=/etc/ssl        \
        --libdir=lib shared zlib-dynamic  \
        chdir={{ Openssl_tar_xf_dir }}/openssl-{{ Openssl_version }}/

    - name: make_openssl
      shell: make  chdir={{ Openssl_tar_xf_dir }}/openssl-{{ Openssl_version }}/

    - name: make_install_openssl
      shell: make install chdir={{ Openssl_tar_xf_dir }}/openssl-{{ Openssl_version }}/

    ###  安装supervisor ###
    - name: 安装supervisor
      shell: easy_install supervisor && \
        cd /etc && \
        mkdir supervisor && \
        echo_supervisord_conf > /etc/supervisor/supervisord.conf && \
        cd /etc/supervisor && mkdir conf.d

    - name: 变更supervisor配置
      shell: sed -i '$a[include]' /etc/supervisor/supervisord.conf && \
        sed -i '$afiles = ./conf.d/*.ini' /etc/supervisor/supervisord.conf && \
    - name: 复制supervisord.conf文件至目标主机
      copy: src={{ Init_file | quote  }}/supervisord.conf dest=/etc/supervisor/  force=yes

    ### system open file limit ###
    - name: 复制sysctl.conf至目标主机
      copy: src={{ Init_file }}/sysctl.conf  dest=/etc/sysctl.conf force=yes
    - name: sysctl_start
      shell: /sbin/sysctl -p

    - name: 启动sysctl参数
      shell: echo '* soft nofile 65535' >> /etc/security/limits.conf && \
        echo '* hard nofile 65535' >> /etc/security/limits.conf && \
        echo 'session required /lib64/security/pam_limits.so' >> /etc/pam.d/login && \
        echo "*          soft    nproc     65535" >> /etc/security/limits.d/90-nproc.conf && \
        echo "*          hard    nproc     65535" >> /etc/security/limits.d/90-nproc.conf && \
        echo "ulimit -SHn 65535" >> /root/.bash_profile

    - name: 停止postfix和chrony服务且关闭开机自启
      shell: systemctl stop postfix && \
        systemctl stop chronyd && \
        systemctl disable postfix.service && \
        systemctl disable chronyd.service
    - name: 停止acpid服务且关闭开机自启
      shell: systemctl stop acpid && \
        systemctl disable acpid.service
      ignore_errors: True

    - name: 变更SSH配置
      shell:
        sed -i "s#PasswordAuthentication yes#PasswordAuthentication no#g"  /etc/ssh/sshd_config && \
        sed -i "s/#Port 22/Port 2020/"  /etc/ssh/sshd_config && \
        sed -i 's/GSSAPIAuthentication yes/GSSAPIAuthentication no/' /etc/ssh/sshd_config && \
        sed -i 's/#UseDNS yes/UseDNS no/' /etc/ssh/sshd_config

    - name: 增加用户
      shell: useradd shiyue && \
        mkdir -p /home/shiyue/.ssh/ && \
        chmod -R 700 /home/shiyue/.ssh/

    - name: 禁止root登录
      shell: sed -i 's/#PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config

    - name: 复制authorized_keys至目标主机
      copy: src={{ Init_file }}/authorized_keys dest=/home/shiyue/.ssh/ force=yes

    - name: 变更权限
      shell: chmod -R 700 /home/shiyue/.ssh  &&  \
        chown shiyue:shiyue -R /home/shiyue

    - name: 设置用户权限
      shell: echo 'shiyue ALL=(ALL) NOPASSWD':' ALL' >> /etc/sudoers

    - name: 重启SSH服务
      shell: systemctl restart sshd

    - name: 记录初始化完成时间
      shell: echo "init stop `date`" >> /tmp/time.txt

---
- name: 安装Node
  hosts: all
  user: root
  tags: node
  gather_facts: true
  vars_files:
    - /etc/ansible/playbooks/var.yaml
  tasks:
    ### Node install ###
    - name: 创建Node解压目录
      file: path={{ node_tar_xf_dir }} state=directory
    - name: 解压Node文件至目标主机
      unarchive: src={{ node_file }}/{{ node_packName }} dest={{ node_tar_xf_dir }}
    - name: 安装Node
      shell: ln -sf {{ node_tar_xf_dir }}/{{ node_version }}/bin/* /usr/bin/