---
 - name: Init
   hosts: all
   user: root
   tags: Init
   gather_facts: true
   vars_files: 
    - var.yaml
   tasks: 
    - name: init_start_time
      shell: echo "init start `date`" > /tmp/time.txt
#    - yum: name="autoconf,bzip2,bzip2-devel,cmake,curl,curl-devel,e2fsprogs,e2fsprogs-devel,freetype,freetype-devel,gcc,gcc-c++,git,glibc,glibc-devel,gmp,gmp-devel,krb5-devel,libcurl,libcurl-devel,libidn,libidn-devel,libjpeg,libjpeg-devel,libmcrypt,libmcrypt-devel,libpng,libpng-devel,libtool-ltdl-devel,libxml2,libxml2-devel,libxslt,libxslt-devel,lrzsz,mysql-devel,ncurses,ncurses-devel,ntp,openldap,openldap-clients,openldap-devel,openldap-servers,openssl,openssl-devel,perl-CPAN,readline,readline-devel,screen,svn,unixODBC,unixODBC-devel,unzip"

    - name: DNS_check
      shell:  host www.sina.com.cn ; echo $?
      register: result
      ignore_errors: True
    - name: change_DNS
      shell:  echo "DNS解析无问题"  >> /root/result.txt
      when: result.stdout_lines[-1] == '0'
    - name: change_DNS
      shell:  echo "DNS解析失效"  >> /root/result.txt
      when: result.stdout_lines[-1] != '0'


    - name: change_host
      shell: ping -f -c 1 10.133.193.110  ; echo $?
      register: ping_result
      ignore_errors: True
    - name: change_DNS
      shell:  echo "10.133.193.110              center.fswy.com" >> /etc/hosts
      when: ping_result.stdout_lines[-1] == '0'
    - name: change_DNS
      shell:  echo "182.254.155.64                center.fswy.com" >> /etc/hosts
      when: ping_result.stdout_lines[-1] != '0'

    - name: show_disk_space
      debug: msg={{ ping_result }}


    - name: safe_rm_dir
      file: path={{ Init_safe_rm_tar_xf_dir }} state=directory 
    - name: safe_rm_tar_xf
      unarchive: src={{ Init_file }}/{{ Init_safe_rm_packName }} dest={{ Init_safe_rm_tar_xf_dir }}
    - name: mv_safe_rm
      shell: mv {{ Init_safe_rm_tar_xf_dir }}/safe-rm-{{ Init_safe_rm_version }}/safe-rm /usr/local/bin/rm && \
             echo "/" >> /etc/safe-rm.conf && \
             echo "/boot" >> /etc/safe-rm.conf

    - name: mkdir_ssh_dir
      file: path={{  Init_SSH }} state=directory
    - name: copy_authorized_keys
      copy: src={{ Init_file }}/authorized_keys dest={{ Init_SSH }} force=yes
    - name: chmod_ssh
      shell: chmod -R 700 /root/.ssh/


    - name: stop_selinux
      shell: setenforce 0
      ignore_errors: True
#&& sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config && echo "start1 `date`" > /tmp/time.txt
    - name: stop_selinux
      shell: sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config 

    - name: stop_firewalld
      shell: systemctl stop firewalld.service && systemctl disable firewalld.service
    - yum : name="iptables-services"
    - name: copy_iptables
      copy: src={{ Init_file | quote  }}/iptables dest={{ Init_iptables | quote }} force=yes
    - name: start_iptables
      shell: systemctl enable iptables && systemctl start iptables

    - name: copy_.bashrc
      copy: src={{ Init_file | quote  }}/.bashrc dest={{ Init_bashrc | quote }} force=yes
    - name: change_hostname
      shell: sed -i '/HOSTNAME/d' /etc/sysconfig/network && \
             echo "{{ Init_Hostname | quote }}" > /etc/hostname && \ 
             hostname -F /etc/hostname && \
             echo "HOSTNAME={{ Init_Hostname | quote }}" >> /etc/sysconfig/network

    - name: time
      shell: /bin/rm -f /etc/localtime  && \
             cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime 
    - name: copy_clock
      copy: src={{ Init_file | quote  }}/clock dest={{ Init_clock | quote}} force=yes

    - name: add_history_time
      shell: echo "# add history time" >> /etc/bashrc && \ 
             echo "export HISTTIMEFORMAT=\"%F %T \"" >> /etc/bashrc

    - name: show_disk_space
      shell: echo "echo '=========================================================='" >> /root/.bash_profile && \
             echo "cat /etc/redhat-release" >> /root/.bash_profile && \
             echo "echo '=========================================================='"  >> /root/.bash_profile && \
             echo "df -lh" >> /root/.bash_profile && \
             echo "ulimit -SHn 65535" >> /root/.bash_profile && \
             echo "stty -ixon" >> /root/.bash_profile   #去掉终端ctrl+s 界面死锁状态


### system open file limit ###
    - name: copy_sysctl.conf
      copy: src={{ Init_file }}/sysctl.conf  dest=/etc/sysctl.conf force=yes 
    - name: sysctl_start
      shell: /sbin/sysctl -p 

    - name: sysctl_start
      shell: echo '* soft nofile 65535' >> /etc/security/limits.conf && \
             echo '* hard nofile 65535' >> /etc/security/limits.conf && \
             echo 'session required /lib64/security/pam_limits.so' >> /etc/pam.d/login && \
             echo "*          soft    nproc     65535" >> /etc/security/limits.d/90-nproc.conf && \
             echo "*          hard    nproc     65535" >> /etc/security/limits.d/90-nproc.conf && \
             echo "ulimit -SHn 65535" >> /root/.bash_profile

    - name: stop_service
      shell: systemctl stop postfix && \
             systemctl stop chronyd && \
             systemctl disable postfix.service && \ 
             systemctl disable chronyd.service
    - name: stop_acpid
      shell: systemctl stop acpid && \
             systemctl disable acpid.service 

#    - name: ssh_Configuration
#      shell: sed -i "s#PasswordAuthentication yes#PasswordAuthentication no#g"  /etc/ssh/sshd_config && \
#             sed -i "s/#Port 22/Port 2020/"  /etc/ssh/sshd_config && \
#             sed -i 's/GSSAPIAuthentication yes/GSSAPIAuthentication no/' /etc/ssh/sshd_config && \
#             sed -i 's/#UseDNS yes/UseDNS no/' /etc/ssh/sshd_config

    - name: init_stop_time
      shell: echo "init stop `date`" >> /tmp/time.txt



 - name: MySQL_install
   hosts: all
   user: root
   gather_facts: true
   vars_files: 
    - var.yaml
   tasks: 
       - name: create_group
         group: name={{ MySQL_group }} 
   
       - name: create_user
         user: name={{ MySQL_user }} group={{ MySQL_group }}
   #    - yum: name="autoconf,bzip2,bzip2-devel,cmake,curl,curl-devel,e2fsprogs,e2fsprogs-devel,freetype,freetype-devel,gcc,gcc-c++,git,glibc,glibc-devel,gmp,gmp-devel,krb5-devel,libcurl,libcurl-devel,libidn,libidn-devel,libjpeg,libjpeg-devel,libmcrypt,libmcrypt-devel,libpng,libpng-devel,libtool-ltdl-devel,libxml2,libxml2-devel,libxslt,libxslt-devel,lrzsz,mysql-devel,ncurses,ncurses-devel,ntp,openldap,openldap-clients,openldap-devel,openldap-servers,openssl,openssl-devel,perl-CPAN,readline,readline-devel,screen,svn,unixODBC,unixODBC-devel,unzip"
   
       - name: create_dir
         file: path={{ MySQL_data_dir }} state=directory owner={{ MySQL_user }} group={{ MySQL_group }}
       - name: create_dir
         file: path={{ MySQL_save_dir }} state=directory owner={{ MySQL_user }} group={{ MySQL_group }}
       - name: create_dir
         file: path={{ MySQL_tar_xf_dir }} state=directory owner={{ MySQL_user }} group={{ MySQL_group }}
       - name: create_dir
         file: path={{ MySQL_binlog_dir }} state=directory owner={{ MySQL_user }} group={{ MySQL_group }}
       - name: create_dir
         file: path={{ MySQL_relaylog_dir }} state=directory owner={{ MySQL_user }} group={{ MySQL_group }}
       - name: create_dir
         file: path={{ MySQL_sock_dir }} state=directory owner={{ MySQL_user }} group={{ MySQL_group }}
   #    - name: create_dir
   #      file: path={{ MySQL_shell_dir }} state=directory owner={{ user }} group={{ group }}
   
   
       - name: unarchive_tar
         unarchive: src={{ MySQL_pack }}/{{ MySQL_packName }} dest={{ MySQL_tar_xf_dir }}
   
       - name: cmake
         command: cmake . -DCMAKE_INSTALL_PREFIX={{ MySQL_data_dir }} \
                           -DWITH_BOOST=boost \
                           -DSYSCONFDIR=/etc \
                           -DWITH_INNOBASE_STORAGE_ENGINE=1 \
                           -DWITH_PARTITION_STORAGE_ENGINE=1  \
                           -DWITH_FEDERATED_STORAGE_ENGINE=1 \
                           -DWITH_BLACKHOLE_STORAGE_ENGINE=1 \
                           -DWITH_MYISAM_STORAGE_ENGINE=1 \
                           -DENABLED_LOCAL_INFILE=1 \
                           -DENABLE_DTRACE=0 \
                           -DDEFAULT_CHARSET=utf8mb4 \
                           -DDEFAULT_COLLATION=utf8mb4_general_ci \
                           -DWITH_EMBEDDED_SERVER=1 \
                           chdir={{ MySQL_tar_xf_dir }}/mysql-{{ MySQL_version }}/
   
       - name: make
         command: make -j {{ ansible_processor_vcpus }}  chdir={{ MySQL_tar_xf_dir }}/mysql-{{ MySQL_version }}/
       - name: make_install
         command: make install -j {{ ansible_processor_vcpus }}  chdir={{ MySQL_tar_xf_dir }}/mysql-{{ MySQL_version }}/

    - name: mysql_start
      shell: chmod +w {{ MySQL_data_dir }}
    - name: mysql_start
      shell: chown -R mysql:mysql {{ MySQL_data_dir }}
    - name: mysql_link
      shell: ln -sf {{ MySQL_data_dir }}/bin/* /usr/bin/
    
    - name: Configuration_MySQL_my.cnf
      copy: src={{ MySQL_pack }}/my.cnf dest={{ MySQL_data_dir }}/3306/my.cnf backup=yes force=yes

    - name: mysql_init
      shell: mysqld --defaults-file={{ MySQL_data_dir }}/3306/my.cnf --initialize-insecure --basedir={{ MySQL_data_dir }} --datadir={{ MySQL_data_dir }}/3306/data --user={{ MySQL_user }}

    - name: Configuration_mysql.sh
      copy: src={{ MySQL_pack }}/mysql.sh dest={{ MySQL_data_dir }}/3306/mysql  backup=yes

    - name: Configuration_mysql.sh
      shell: chmod +x {{ MySQL_data_dir }}/3306/mysql

    - name: mysql_start
      shell: /data/mysql/3306/mysql start

    - name: mysql_start
      shell: chown -R mysql:mysql {{ MySQL_sock_dir }}

    - name: mysql_sock_link
      shell: ln -s /tmp/mysql.sock /var/lib/mysql/mysql.sock

    - name: mysql_shell_start
      shell: echo "/data/mysql/3306/mysql start" > /root/mysql_start
    - name: mysql_shell_stop
      shell: echo "/data/mysql/3306/mysql stop" > /root/mysql_stop
    - name: mysql_chmon_shell
      shell: chmod 700 /root/mysql*
    - name: mysql_autostart
      shell: echo "/root/mysql_start" >> /etc/rc.local


    - name: mysql_init_passwd
      shell: </dev/urandom tr -dc 0-9-A-Z-a-z|head -c ${1:-16} > {{ MySQL_save_dir }}/mysql_root
    - name: mysql_init_passwd
      shell: chmod -R 700 {{ MySQL_save_dir }}
    - name: mysql_root_change_passwd
      shell: /bin/mysqladmin -u root password $(cat /data/save/mysql_root)
### admin ###
    - name: admin_localhost_setting
      shell: /usr/bin/mysql -u root -p$(cat /data/save/mysql_root) -e"GRANT ALL PRIVILEGES ON *.* TO 'admin'@'localhost' IDENTIFIED BY '37eJZR8RGZTd42l5l3hrUBqi';"
    - name: admin_127.0.0.1_setting
      shell: /usr/bin/mysql -u root -p$(cat /data/save/mysql_root) -e"GRANT ALL PRIVILEGES ON *.* TO 'admin'@'127.0.0.1' IDENTIFIED BY '37eJZR8RGZTd42l5l3hrUBqi';"
### root ###
    - name: root_localhost_setting
      shell: /usr/bin/mysql -u root -p$(cat /data/save/mysql_root) -e"GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' IDENTIFIED BY '$(cat /data/save/mysql_root)';"
    - name: root_127.0.0.1_setting
      shell: /usr/bin/mysql -u root -p$(cat /data/save/mysql_root) -e"GRANT ALL PRIVILEGES ON *.* TO 'root'@'127.0.0.1' IDENTIFIED BY '$(cat /data/save/mysql_root)';"
### 添加用户 
    - name: addUser
      shell: /usr/bin/mysql -u root -p$(cat /data/save/mysql_root) -e"grant all privileges on *.* to 'xge'@'%' identified by '$(cat /data/save/mysql_root)';"
    - name: user_iam
      shell: /usr/bin/mysql -u root -p$(cat /data/save/mysql_root) -e"REVOKE EXECUTE, PROCESS, SHOW DATABASES, CREATE USER, FILE, GRANT OPTION, RELOAD, REPLICATION CLIENT, REPLICATION SLAVE, SHUTDOWN, SUPER, CREATE ROUTINE, ALTER ROUTINE ON *.* FROM 'xge'@'%';"



 - name: PHP_install
   hosts: all
   user: root
   tags: PHP
   gather_facts: true
   vars_files: 
    - var.yaml
   tasks: 
    - name: create_group
      group: name={{ user }} 

    - name: create_user
      user: name={{ user }} shell=/sbin/nologin createhome=no group={{ user }}

    - yum: name="autoconf,bzip2,bzip2-devel,cmake,curl,curl-devel,e2fsprogs,e2fsprogs-devel,freetype,freetype-devel,gcc,gcc-c++,git,glibc,glibc-devel,gmp,gmp-devel,krb5-devel,libcurl,libcurl-devel,libidn,libidn-devel,libjpeg,libjpeg-devel,libmcrypt,libmcrypt-devel,libpng,libpng-devel,libtool-ltdl-devel,libxml2,libxml2-devel,libxslt,libxslt-devel,lrzsz,mysql-devel,ncurses,ncurses-devel,ntp,openldap,openldap-clients,openldap-devel,openldap-servers,openssl,openssl-devel,perl-CPAN,readline,readline-devel,screen,svn,unixODBC,unixODBC-devel,unzip"

    - name: create_dir
      file: path={{ log_dir }} state=directory owner={{ user }} group={{ group }}
    - name: create_dir
      file: path={{ PHP_dir }} state=directory owner={{ user }} group={{ group }}
    - name: create_dir
      file: path={{ PHP_tar_xf_dir }} state=directory owner={{ user }} group={{ group }}
    - name: create_dir
      file: path={{ PHP_conf_dir }} state=directory owner={{ user }} group={{ group }}

    - name: unarchive_tar
      unarchive: src={{ PHP_pack }}/{{ PHP_packName }} dest={{ PHP_tar_xf_dir }}


    - name: configure
      command: ./configure --prefix={{ PHP_dir }} \ 
                --with-config-file-path={{ PHP_conf_dir }} \
                --enable-fpm  \
                --with-fpm-user={{ user }} \
                --with-fpm-group={{ group }} \
                --enable-inline-optimization \
                --disable-debug \
                --disable-rpath \
                --enable-shared \
                --enable-soap \
                --with-libxml-dir \
                --with-xmlrpc \
                --with-openssl \
                --with-mcrypt \
                --with-mhash \
                --with-pcre-regex \
                --with-sqlite3 \
                --with-zlib \
                --enable-bcmath \
                --with-iconv --with-bz2 \
                --enable-calendar --with-curl \
                --with-cdb --enable-dom \
                --enable-exif --enable-fileinfo \
                --enable-filter --with-pcre-dir \
                --enable-ftp --with-gd --with-openssl-dir \
                --with-jpeg-dir --with-png-dir --with-zlib-dir \
                --with-freetype-dir --enable-gd-native-ttf --enable-gd-jis-conv \
                --with-gettext --with-gmp --with-mhash \
                --enable-json --enable-mbstring --enable-mbregex \
                --enable-mbregex-backtrack --with-libmbfl --with-onig \
                --enable-pdo --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd \
                --with-zlib-dir --with-pdo-sqlite --with-readline \
                --enable-session --enable-shmop --enable-simplexml \
                --enable-sockets  --enable-sysvmsg --enable-sysvsem \
                --enable-sysvshm --enable-wddx --with-libxml-dir \
                --with-xsl --enable-zip --enable-mysqlnd-compression-support \
                --with-pear --enable-opcache  \
                chdir={{ PHP_tar_xf_dir }}/php-{{ PHP_version }}/

    - name: make
      command: make -j {{ ansible_processor_vcpus }} chdir={{ PHP_tar_xf_dir }}/php-{{ PHP_version }}/ 

    - name: make_install
      command: make install -j {{ ansible_processor_vcpus }}  chdir={{ PHP_tar_xf_dir }}/php-{{ PHP_version }}/ 

    - name: Configuration_php.ini
      command: \cp {{ PHP_tar_xf_dir }}/php-{{ PHP_version }}/php.ini-development {{ PHP_conf_dir }}/php.ini

    - name: Configuration_php-fpm.conf
      command: \cp {{ PHP_conf_dir }}/php-fpm.conf.default {{ PHP_conf_dir }}/php-fpm.conf
    - name: Configuration_init_php-fpm
      command: \cp {{ PHP_tar_xf_dir }}/php-{{ PHP_version }}/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm
    - name: Configuration_www.conf
      command: \cp {{ PHP_conf_dir }}/php-fpm.d/www.conf.default {{ PHP_conf_dir }}/php-fpm.d/www.conf
    - name: Configuration_www.conf
      command: sed -i.bak 's/9000/10080/' {{ PHP_conf_dir }}/php-fpm.d/www.conf
    - name: Configuration_php.ini
      command: sed -i.bak 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=1/' {{ PHP_conf_dir }}/php.ini

    - name: php-fpm_start
      shell: echo "/etc/init.d/php-fpm start" > /root/fastcgi_start && \
             echo "/etc/init.d/php-fpm stop" > /root/fastcgi_stop && \
             echo "/etc/init.d/php-fpm restart" > /root/fastcgi_restart && \
             chmod 700 /root/fastcgi* && \
             chmod +x /etc/init.d/php-fpm

    - name: php-fpm_autoStart
      shell: echo "/root/fastcgi_start" >> /etc/rc.local

    #php.ini,php软链接
    - name: Configuration_php.ini_link
      file: src={{ PHP_conf_dir }}/php.ini dest=/etc/php.ini state=link
    - name: Configuration_php_link
      file: src={{ PHP_bin_dir }}/php dest=/bin/php state=link
    - name: Configuration_php_link
      file: src={{ PHP_bin_dir }}/php dest=/usr/bin/php state=link

 - name: Nginx_install
   hosts: all
   user: root
   gather_facts: true
   tags: nginx
   vars_files: 
    - var.yaml
   tasks: 
    - name: create_group
      group: name={{ user }} 

    - name: create_user
      user: name={{ user }} shell=/sbin/nologin createhome=no group={{ user }}
#    - yum: name="autoconf,bzip2,bzip2-devel,cmake,curl,curl-devel,e2fsprogs,e2fsprogs-devel,freetype,freetype-devel,gcc,gcc-c++,git,glibc,glibc-devel,gmp,gmp-devel,krb5-devel,libcurl,libcurl-devel,libidn,libidn-devel,libjpeg,libjpeg-devel,libmcrypt,libmcrypt-devel,libpng,libpng-devel,libtool-ltdl-devel,libxml2,libxml2-devel,libxslt,libxslt-devel,lrzsz,mysql-devel,ncurses,ncurses-devel,ntp,openldap,openldap-clients,openldap-devel,openldap-servers,openssl,openssl-devel,perl-CPAN,readline,readline-devel,screen,svn,unixODBC,unixODBC-devel,unzip"

    - name: create_dir
      file: path={{ Nginx_conf_dir }} state=directory owner={{ user }} group={{ group }}
    - name: create_dir
      file: path={{ Nginx_link_conf_dir }} state=directory owner={{ user }} group={{ group }}
    - name: create_dir
      file: path={{ Nginx_tar_xf_dir }} state=directory owner={{ user }} group={{ group }}
    - name: create_dir
      file: path={{ Nginx_link_source }} state=directory owner={{ user }} group={{ group }}


    - name: unarchive_tar
      unarchive: src={{ Nginx_pack }}/nginx-{{ Nginx_version }}.tar.gz dest={{ Nginx_tar_xf_dir }}

    - name: configure
      command: ./configure --prefix={{ Nginx_dir }} \
                           --user={{ user }}  \
                           --group={{ user }} \
                           --with-http_stub_status_module \
                           --with-http_stub_status_module \ 
                           --with-http_ssl_module \ 
                           chdir={{ Nginx_tar_xf_dir }}/nginx-{{ Nginx_version }}/
 
    - name: make
      command: make -j {{ ansible_processor_vcpus }} chdir={{ Nginx_tar_xf_dir }}/nginx-{{ Nginx_version }}/ 

    - name: make_install
      command: make install -j {{ ansible_processor_vcpus }} chdir={{ Nginx_tar_xf_dir }}/nginx-{{ Nginx_version }}/

    - name: Nginx_link
      file: src={{ Nginx_link_source }} dest={{ Nginx_link_conf_dir }}/vhost state=link
#      file: src=/usr/local/lib/libpcre.so.1 dest=/lib64/ state=link

    - name: Configuration_nginx.conf
      copy: src={{ Nginx_pack }}/nginx.conf dest={{ Nginx_master_conf_dir }}/nginx.conf backup=yes force=yes
    - name: Configuration_nginx_sy.conf
      copy: src={{ Nginx_pack }}/sy.conf dest={{ Nginx_conf_dir }}/sy.conf backup=yes
    - name: Configuration_nginx_logrotate
      copy: src={{ Nginx_pack }}/nginx dest=/etc/logrotate.d/nginx backup=yes


    - name: nginx_start
      shell: ulimit -SHn 65535 && \
             echo "/data/nginx/sbin/nginx" > /root/nginx_start && \
             echo "/data/nginx/sbin/nginx -t" > /root/nginx_reload && \
             echo "/data/nginx/sbin/nginx -s reload" >> /root/nginx_reload && \
             chmod 700 /root/nginx* && \
             /data/nginx/sbin/nginx 

    - name: nginx_autoStart
      shell: echo "/data/nginx/sbin/nginx" >> /etc/rc.local && \
             chmod +x /etc/rc.d/rc.local



 - name: Openssl_install
   hosts: all
   user: root
   gather_facts: true
   tags: erlang
   vars_files:
    - var.yaml
   tasks:
    - name: create_dir
      file: path={{ Openssl_tar_xf_dir }} state=directory owner={{ user }} group={{ group }}
    - name: create_dir
      file: path={{ Otp_tar_xf_dir }} state=directory owner={{ user }} group={{ group }}

    - name: openssl_tar_xf
      unarchive: src={{ Openssl_file }}/{{ Openssl_packName }} dest={{ Openssl_tar_xf_dir }}
    - name: otp_tar_xf
      unarchive: src={{ Openssl_file }}/{{ Otp_packName }}.tar.gz dest={{ Otp_tar_xf_dir }}
### Openssl ###
    - name: config_openssl
      shell: |
        ./config --prefix=/usr  \
        --openssldir=/etc/ssl \
        --libdir=lib shared zlib-dynamic  \ #&&  make && make install 
        chdir={{ Openssl_tar_xf_dir }}/openssl-{{ Openssl_version }}/
   
    - name: make_openssl
      shell: |
        make  chdir={{ Openssl_tar_xf_dir }}/openssl-{{ Openssl_version }}/
   
    - name: make_install_openssl
      shell: |
        make install chdir={{ Openssl_tar_xf_dir }}/openssl-{{ Openssl_version }}/
   
    - name: make_clean
      shell: make clean chdir={{ Openssl_tar_xf_dir }}/openssl-{{ Openssl_version }}/
   
    - name: config_openssl_ERLANG
      shell: ./config --prefix=/usr/local/ssl chdir={{ Openssl_tar_xf_dir }}/openssl-{{ Openssl_version }}/
   
    - name: change_openssl_ERLANG
      shell: sed -i 's/DGHASH_ASM/DGHASH_ASM -fPIC/' Makefile  chdir={{ Openssl_tar_xf_dir }}/openssl-{{ Openssl_version }}/
   
    - name: make_openssl_ERLANG
      shell: make chdir={{ Openssl_tar_xf_dir }}/openssl-{{ Openssl_version }}/
   
    - name: make_install_openssl_ERLANG
      shell: make install chdir={{ Openssl_tar_xf_dir }}/openssl-{{ Openssl_version }}/
   
   ### Otp ###
    - name: config_Otp
      shell: CHOST="x86_64-pc-linux-gnu" CFLAGS="-march=nocona -O2 -pipe" CXXFLAGS="-march=nocona -O2 -pipe" chdir={{ Otp_tar_xf_dir }}/{{ Otp_packName }}/
   
    - name: config_otp
      shell: ./configure --enable-kernel-poll \ 
                         --enable-threads     \
                         --enable-smp-support \
                         --enable-hipe        \
                         --with-ssl=/usr/local/ssl/ \
                         chdir={{ Otp_tar_xf_dir }}/{{ Otp_packName }}/
   
    
    - name: make_otp
      shell: make -j  {{ ansible_processor_vcpus }} chdir={{ Otp_tar_xf_dir }}/{{ Otp_packName }}/
    
    - name: make_install_otp
      shell: make install -j  {{ ansible_processor_vcpus }} chdir={{ Otp_tar_xf_dir }}/{{ Otp_packName }}/
   
    - name: change_php.ini
      shell: sed -i '736 i extension_dir = "/data/php/lib/php/extensions/no-debug-non-zts-20151012"' /data/php/etc/php.ini && \
             sed -i 's/;date.timezone =/date.timezone = PRC/' /data/php/etc/php.ini && \
             sed -i 's/short_open_tag = Off/short_open_tag = On/' /data/php/etc/php.ini 
